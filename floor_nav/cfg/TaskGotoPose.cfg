#! /usr/bin/env python
# Task Long configuration

PACKAGE='floor_nav'
import roslib; roslib.load_manifest(PACKAGE)

from dynamic_reconfigure.parameter_generator import *
from task_manager_lib.parameter_generator import *

gen = TaskParameterGenerator()
#       Name                    Type            Description
#       Default    Min   Max
gen.add("goal_x",        double_t, 0,    "X coordinate of destination",  0.)
gen.add("goal_y",        double_t, 0,    "Y coordinate of destination",  0.)
gen.add("goal_theta",    double_t, 0,    "Theta coordinate of destination",  0.)
gen.add("smart_mode",     bool_t, 0,    "When true, use the smart mode", True)
gen.add("holonomic_mode",     bool_t, 0,    "When true, use the holonomic mode", False)
gen.add("relative",     bool_t, 0,    "When true, the goal is relative to the current position",  False)
gen.add("k_v",           double_t, 0,    "Gain for velocity control",  2.0)
gen.add("k_alpha",       double_t, 0,    "Gain for angular control",  3.0)
gen.add("k_beta",       double_t, 0,    "Gain for angular control",  -1.0)
gen.add("k_gamma",       double_t, 0,    "Gain for angular control",  0.5)
gen.add("max_velocity",  double_t, 0,    "Max allowed velocity",  2.0)
gen.add("max_angular_velocity",  double_t, 0, "Max allowed angular velocity",  1.0)
gen.add("dist_threshold",double_t, 0,    "Distance at which a the target is considered reached",  0.1)
gen.add("angle_threshold",double_t, 0,    "Angle at which the target is considered reached",  0.2)


exit(gen.generate(PACKAGE, "floor_nav", "TaskGoToPose"))
